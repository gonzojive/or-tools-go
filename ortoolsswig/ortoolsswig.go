/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: /home/red/git/or-tools-go/ortoolsswig/linear_solver.i

package ortoolsswig

// #cgo CXXFLAGS: -std=c++17
// #cgo LDFLAGS: -lortools
/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef long long swig_type_11;
typedef long long swig_type_12;
typedef long long swig_type_13;
typedef long long swig_type_14;
typedef _gostring_ swig_type_15;
typedef _gostring_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
typedef _gostring_ swig_type_20;
typedef _gostring_ swig_type_21;
typedef _gostring_ swig_type_22;
typedef _gostring_ swig_type_23;
typedef _gostring_ swig_type_24;
typedef _gostring_ swig_type_25;
typedef _gostring_ swig_type_26;
extern void _wrap_Swig_free_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_intgo _wrap_ABSL_REQUIRE_STACK_ALIGN_TRAMPOLINE_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_CLP_LINEAR_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_GLPK_LINEAR_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_GLOP_LINEAR_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_SCIP_MIXED_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_GLPK_MIXED_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_CBC_MIXED_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_GUROBI_LINEAR_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_GUROBI_MIXED_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_CPLEX_LINEAR_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_CPLEX_MIXED_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_XPRESS_LINEAR_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_XPRESS_MIXED_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_BOP_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_SAT_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526(void);
extern uintptr_t _wrap_new_Solver_ortoolsswig_fe88f1954daf0526(swig_type_1 arg1, swig_intgo arg2);
extern void _wrap_delete_Solver_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern _Bool _wrap_Solver_SupportsProblemType_ortoolsswig_fe88f1954daf0526(swig_intgo arg1);
extern void _wrap_Solver_Clear_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_intgo _wrap_Solver_NumVariables_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern uintptr_t _wrap_Solver_variables_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern uintptr_t _wrap_Solver_LookupVariable_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, swig_type_2 arg2);
extern uintptr_t _wrap_Solver_Var_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2, double arg3, _Bool arg4, swig_type_3 arg5);
extern uintptr_t _wrap_Solver_NumVar_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2, double arg3, swig_type_4 arg4);
extern uintptr_t _wrap_Solver_IntVar_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2, double arg3, swig_type_5 arg4);
extern uintptr_t _wrap_Solver_BoolVar_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, swig_type_6 arg2);
extern swig_intgo _wrap_Solver_NumConstraints_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern uintptr_t _wrap_Solver_constraints_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern uintptr_t _wrap_Solver_LookupConstraint_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, swig_type_7 arg2);
extern uintptr_t _wrap_Solver_Constraint__SWIG_0_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2, double arg3);
extern uintptr_t _wrap_Solver_Constraint__SWIG_1_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern uintptr_t _wrap_Solver_Constraint__SWIG_2_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2, double arg3, swig_type_8 arg4);
extern uintptr_t _wrap_Solver_Constraint__SWIG_3_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, swig_type_9 arg2);
extern uintptr_t _wrap_Solver_Objective_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_intgo _wrap_StatusOptimal_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_StatusFeasible_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_StatusInfeasible_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_StatusUnbounded_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_StatusAbnormal_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_StatusNotSolved_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_Solver_Solve__SWIG_0_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_intgo _wrap_Solver_Solve__SWIG_1_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_ComputeConstraintActivities_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern _Bool _wrap_Solver_VerifySolution_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2, _Bool arg3);
extern _Bool _wrap_Solver_InterruptSolve_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Solver_FillSolutionResponseProto_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Solver_SolveWithProto__SWIG_0_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Solver_SolveWithProto__SWIG_1_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Solver_ExportModelToProto_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_LoadSolutionFromProto__SWIG_0_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2, double arg3);
extern uintptr_t _wrap_Solver_LoadSolutionFromProto__SWIG_1_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Solver_SetSolverSpecificParametersAsString_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, swig_type_10 arg2);
extern swig_intgo _wrap_FREE_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_AT_LOWER_BOUND_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_AT_UPPER_BOUND_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_FIXED_VALUE_Solver_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_BASIC_Solver_ortoolsswig_fe88f1954daf0526(void);
extern double _wrap_Solver_infinity_ortoolsswig_fe88f1954daf0526(void);
extern void _wrap_Solver_EnableOutput_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Solver_SuppressOutput_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_type_11 _wrap_Solver_iterations_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_type_12 _wrap_Solver_nodes_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern double _wrap_Solver_ComputeExactConditionNumber_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern _Bool _wrap_Solver_NextSolution_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Solver_set_time_limit_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, swig_type_13 arg2);
extern swig_type_14 _wrap_Solver_wall_time_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_type_15 _wrap_Solver_LoadModelFromProto_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2);
extern swig_type_16 _wrap_Solver_ExportModelAsLpFormat_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, _Bool arg2);
extern swig_type_17 _wrap_Solver_ExportModelAsMpsFormat_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, _Bool arg2, _Bool arg3);
extern void _wrap_Solver_SetHint_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_Solver_SetNumThreads_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Solver_SetTimeLimit_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Solver_WallTime_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Objective_Clear_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Objective_SetCoefficient_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2, double arg3);
extern double _wrap_Objective_GetCoefficient_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Objective_SetOffset_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2);
extern double _wrap_Objective_offset_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Objective_SetOptimizationDirection_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, _Bool arg2);
extern void _wrap_Objective_SetMinimization_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Objective_SetMaximization_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern _Bool _wrap_Objective_maximization_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern _Bool _wrap_Objective_minimization_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern double _wrap_Objective_Value_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern double _wrap_Objective_BestBound_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_delete_Objective_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_type_18 _wrap_Variable_name_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Variable_SetInteger_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_Variable_integer_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern double _wrap_Variable_solution_value_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_intgo _wrap_Variable_index_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern double _wrap_Variable_lb_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern double _wrap_Variable_ub_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Variable_SetBounds_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2, double arg3);
extern double _wrap_Variable_reduced_cost_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_intgo _wrap_Variable_basis_status_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_type_19 _wrap_Variable___str___ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_type_20 _wrap_Variable___repr___ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern double _wrap_Variable_SolutionValue_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Variable_SetLb_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2);
extern void _wrap_Variable_SetUb_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2);
extern double _wrap_Variable_ReducedCost_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_delete_Variable_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_type_21 _wrap_Constraint_name_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Constraint_Clear_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Constraint_SetCoefficient_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2, double arg3);
extern double _wrap_Constraint_GetCoefficient_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_Constraint_lb_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern double _wrap_Constraint_ub_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Constraint_SetBounds_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2, double arg3);
extern void _wrap_Constraint_set_is_lazy_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, _Bool arg2);
extern swig_intgo _wrap_Constraint_index_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern double _wrap_Constraint_dual_value_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_intgo _wrap_Constraint_basis_status_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_Constraint_SetLb_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2);
extern void _wrap_Constraint_SetUb_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, double arg2);
extern double _wrap_Constraint_DualValue_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern void _wrap_delete_Constraint_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_intgo _wrap_RELATIVE_MIP_GAP_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_PRIMAL_TOLERANCE_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_DUAL_TOLERANCE_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_PRESOLVE_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_LP_ALGORITHM_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_INCREMENTALITY_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_SCALING_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_PRESOLVE_OFF_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_PRESOLVE_ON_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_DUAL_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_PRIMAL_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_BARRIER_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_INCREMENTALITY_OFF_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_INCREMENTALITY_ON_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_SCALING_OFF_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_SCALING_ON_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern double _wrap_MPSolverParameters_kDefaultRelativeMipGap_get_ortoolsswig_fe88f1954daf0526(void);
extern double _wrap_MPSolverParameters_kDefaultPrimalTolerance_get_ortoolsswig_fe88f1954daf0526(void);
extern double _wrap_MPSolverParameters_kDefaultDualTolerance_get_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_MPSolverParameters_kDefaultPresolve_get_ortoolsswig_fe88f1954daf0526(void);
extern swig_intgo _wrap_MPSolverParameters_kDefaultIncrementality_get_ortoolsswig_fe88f1954daf0526(void);
extern uintptr_t _wrap_new_MPSolverParameters_ortoolsswig_fe88f1954daf0526(void);
extern void _wrap_MPSolverParameters_SetDoubleParam_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, swig_intgo arg2, double arg3);
extern void _wrap_MPSolverParameters_SetIntegerParam_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern double _wrap_MPSolverParameters_GetDoubleParam_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_MPSolverParameters_GetIntegerParam_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_delete_MPSolverParameters_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern uintptr_t _wrap_new_ModelExportOptions_ortoolsswig_fe88f1954daf0526(void);
extern void _wrap_delete_ModelExportOptions_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_type_22 _wrap_ExportModelAsLpFormat__SWIG_0_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2);
extern swig_type_23 _wrap_ExportModelAsLpFormat__SWIG_1_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_type_24 _wrap_ExportModelAsMpsFormat__SWIG_0_ortoolsswig_fe88f1954daf0526(uintptr_t arg1, uintptr_t arg2);
extern swig_type_25 _wrap_ExportModelAsMpsFormat__SWIG_1_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
extern swig_type_26 _wrap_FindErrorInModelProto_ortoolsswig_fe88f1954daf0526(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

const ABSL_HAVE_ATTRIBUTE_NO_TAIL_CALL int = 0
const ABSL_HAVE_ATTRIBUTE_WEAK int = 0
const ABSL_HAVE_ATTRIBUTE_SECTION int = 0

func _swig_getABSL_REQUIRE_STACK_ALIGN_TRAMPOLINE() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ABSL_REQUIRE_STACK_ALIGN_TRAMPOLINE_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var ABSL_REQUIRE_STACK_ALIGN_TRAMPOLINE int = _swig_getABSL_REQUIRE_STACK_ALIGN_TRAMPOLINE()

type SwigcptrSolver uintptr

func (p SwigcptrSolver) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSolver) SwigIsSolver() {
}

type Operations_researchMPSolverOptimizationProblemType int

func _swig_getSolver_CLP_LINEAR_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_CLP_LINEAR_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverCLP_LINEAR_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_CLP_LINEAR_PROGRAMMING_Solver()

func _swig_getSolver_GLPK_LINEAR_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_GLPK_LINEAR_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverGLPK_LINEAR_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_GLPK_LINEAR_PROGRAMMING_Solver()

func _swig_getSolver_GLOP_LINEAR_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_GLOP_LINEAR_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverGLOP_LINEAR_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_GLOP_LINEAR_PROGRAMMING_Solver()

func _swig_getSolver_SCIP_MIXED_INTEGER_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_SCIP_MIXED_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverSCIP_MIXED_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_SCIP_MIXED_INTEGER_PROGRAMMING_Solver()

func _swig_getSolver_GLPK_MIXED_INTEGER_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_GLPK_MIXED_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverGLPK_MIXED_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_GLPK_MIXED_INTEGER_PROGRAMMING_Solver()

func _swig_getSolver_CBC_MIXED_INTEGER_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_CBC_MIXED_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverCBC_MIXED_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_CBC_MIXED_INTEGER_PROGRAMMING_Solver()

func _swig_getSolver_GUROBI_LINEAR_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_GUROBI_LINEAR_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverGUROBI_LINEAR_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_GUROBI_LINEAR_PROGRAMMING_Solver()

func _swig_getSolver_GUROBI_MIXED_INTEGER_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_GUROBI_MIXED_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverGUROBI_MIXED_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_GUROBI_MIXED_INTEGER_PROGRAMMING_Solver()

func _swig_getSolver_CPLEX_LINEAR_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_CPLEX_LINEAR_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverCPLEX_LINEAR_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_CPLEX_LINEAR_PROGRAMMING_Solver()

func _swig_getSolver_CPLEX_MIXED_INTEGER_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_CPLEX_MIXED_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverCPLEX_MIXED_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_CPLEX_MIXED_INTEGER_PROGRAMMING_Solver()

func _swig_getSolver_XPRESS_LINEAR_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_XPRESS_LINEAR_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverXPRESS_LINEAR_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_XPRESS_LINEAR_PROGRAMMING_Solver()

func _swig_getSolver_XPRESS_MIXED_INTEGER_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_XPRESS_MIXED_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverXPRESS_MIXED_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_XPRESS_MIXED_INTEGER_PROGRAMMING_Solver()

func _swig_getSolver_BOP_INTEGER_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_BOP_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverBOP_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_BOP_INTEGER_PROGRAMMING_Solver()

func _swig_getSolver_SAT_INTEGER_PROGRAMMING_Solver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_SAT_INTEGER_PROGRAMMING_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverSAT_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getSolver_SAT_INTEGER_PROGRAMMING_Solver()

func NewSolver(arg1 string, arg2 Operations_researchMPSolverOptimizationProblemType) (_swig_ret Solver) {
	var swig_r Solver
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Solver)(SwigcptrSolver(C._wrap_new_Solver_ortoolsswig_fe88f1954daf0526(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DeleteSolver(arg1 Solver) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Solver_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

func SolverSupportsProblemType(arg1 Operations_researchMPSolverOptimizationProblemType) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Solver_SupportsProblemType_ortoolsswig_fe88f1954daf0526(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Clear() {
	_swig_i_0 := arg1
	C._wrap_Solver_Clear_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) NumVariables() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Solver_NumVariables_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Variables() (_swig_ret Std_vector_Sl_operations_research_MPVariable_Sm__Sg_) {
	var swig_r Std_vector_Sl_operations_research_MPVariable_Sm__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_operations_research_MPVariable_Sm__Sg_)(SwigcptrStd_vector_Sl_operations_research_MPVariable_Sm__Sg_(C._wrap_Solver_variables_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) LookupVariable(arg2 string) (_swig_ret Variable) {
	var swig_r Variable
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Variable)(SwigcptrVariable(C._wrap_Solver_LookupVariable_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrSolver) Var(arg2 float64, arg3 float64, arg4 bool, arg5 string) (_swig_ret Variable) {
	var swig_r Variable
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Variable)(SwigcptrVariable(C._wrap_Solver_Var_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C._Bool(_swig_i_3), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrSolver) NumVar(arg2 float64, arg3 float64, arg4 string) (_swig_ret Variable) {
	var swig_r Variable
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Variable)(SwigcptrVariable(C._wrap_Solver_NumVar_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), *(*C.swig_type_4)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) IntVar(arg2 float64, arg3 float64, arg4 string) (_swig_ret Variable) {
	var swig_r Variable
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Variable)(SwigcptrVariable(C._wrap_Solver_IntVar_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) BoolVar(arg2 string) (_swig_ret Variable) {
	var swig_r Variable
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Variable)(SwigcptrVariable(C._wrap_Solver_BoolVar_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), *(*C.swig_type_6)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrSolver) NumConstraints() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Solver_NumConstraints_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Constraints() (_swig_ret Std_vector_Sl_operations_research_MPConstraint_Sm__Sg_) {
	var swig_r Std_vector_Sl_operations_research_MPConstraint_Sm__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_operations_research_MPConstraint_Sm__Sg_)(SwigcptrStd_vector_Sl_operations_research_MPConstraint_Sm__Sg_(C._wrap_Solver_constraints_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) LookupConstraint(arg2 string) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_LookupConstraint_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), *(*C.swig_type_7)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrSolver) Constraint__SWIG_0(arg2 float64, arg3 float64) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_Constraint__SWIG_0_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) Constraint__SWIG_1() (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_Constraint__SWIG_1_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) Constraint__SWIG_2(arg2 float64, arg3 float64, arg4 string) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_Constraint__SWIG_2_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), *(*C.swig_type_8)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSolver) Constraint__SWIG_3(arg2 string) (_swig_ret Constraint) {
	var swig_r Constraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Constraint)(SwigcptrConstraint(C._wrap_Solver_Constraint__SWIG_3_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), *(*C.swig_type_9)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrSolver) Constraint(a ...interface{}) Constraint {
	argc := len(a)
	if argc == 0 {
		return p.Constraint__SWIG_1()
	}
	if argc == 1 {
		return p.Constraint__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return p.Constraint__SWIG_0(a[0].(float64), a[1].(float64))
	}
	if argc == 3 {
		return p.Constraint__SWIG_2(a[0].(float64), a[1].(float64), a[2].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) Objective() (_swig_ret Objective) {
	var swig_r Objective
	_swig_i_0 := arg1
	swig_r = (Objective)(SwigcptrObjective(C._wrap_Solver_Objective_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type Operations_researchMPSolverResultStatus int

func _swig_getSolver_StatusOptimal_Solver() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_StatusOptimal_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverStatusOptimal Operations_researchMPSolverResultStatus = _swig_getSolver_StatusOptimal_Solver()

func _swig_getSolver_StatusFeasible_Solver() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_StatusFeasible_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverStatusFeasible Operations_researchMPSolverResultStatus = _swig_getSolver_StatusFeasible_Solver()

func _swig_getSolver_StatusInfeasible_Solver() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_StatusInfeasible_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverStatusInfeasible Operations_researchMPSolverResultStatus = _swig_getSolver_StatusInfeasible_Solver()

func _swig_getSolver_StatusUnbounded_Solver() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_StatusUnbounded_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverStatusUnbounded Operations_researchMPSolverResultStatus = _swig_getSolver_StatusUnbounded_Solver()

func _swig_getSolver_StatusAbnormal_Solver() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_StatusAbnormal_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverStatusAbnormal Operations_researchMPSolverResultStatus = _swig_getSolver_StatusAbnormal_Solver()

func _swig_getSolver_StatusNotSolved_Solver() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_StatusNotSolved_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverStatusNotSolved Operations_researchMPSolverResultStatus = _swig_getSolver_StatusNotSolved_Solver()

func (arg1 SwigcptrSolver) Solve__SWIG_0() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	_swig_i_0 := arg1
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_Solver_Solve__SWIG_0_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Solve__SWIG_1(arg2 MPSolverParameters) (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_Solver_Solve__SWIG_1_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrSolver) Solve(a ...interface{}) Operations_researchMPSolverResultStatus {
	argc := len(a)
	if argc == 0 {
		return p.Solve__SWIG_0()
	}
	if argc == 1 {
		return p.Solve__SWIG_1(a[0].(MPSolverParameters))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) ComputeConstraintActivities() (_swig_ret Std_vector_Sl_double_Sg_) {
	var swig_r Std_vector_Sl_double_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_double_Sg_)(SwigcptrStd_vector_Sl_double_Sg_(C._wrap_Solver_ComputeConstraintActivities_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSolver) VerifySolution(arg2 float64, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_Solver_VerifySolution_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSolver) InterruptSolve() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Solver_InterruptSolve_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) FillSolutionResponseProto(arg2 Operations_research_MPSolutionResponse) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Solver_FillSolutionResponseProto_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func SolverSolveWithProto__SWIG_0(arg1 Operations_research_MPModelRequest, arg2 Operations_research_MPSolutionResponse, arg3 Std_atomic_Sl_bool_Sg_) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Solver_SolveWithProto__SWIG_0_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func SolverSolveWithProto__SWIG_1(arg1 Operations_research_MPModelRequest, arg2 Operations_research_MPSolutionResponse) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Solver_SolveWithProto__SWIG_1_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func SolverSolveWithProto(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		SolverSolveWithProto__SWIG_1(a[0].(Operations_research_MPModelRequest), a[1].(Operations_research_MPSolutionResponse))
		return
	}
	if argc == 3 {
		SolverSolveWithProto__SWIG_0(a[0].(Operations_research_MPModelRequest), a[1].(Operations_research_MPSolutionResponse), a[2].(Std_atomic_Sl_bool_Sg_))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) ExportModelToProto(arg2 Operations_research_MPModelProto) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Solver_ExportModelToProto_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolver) LoadSolutionFromProto__SWIG_0(arg2 Operations_research_MPSolutionResponse, arg3 float64) (_swig_ret Absl_Status) {
	var swig_r Absl_Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (Absl_Status)(SwigcptrAbsl_Status(C._wrap_Solver_LoadSolutionFromProto__SWIG_0_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrSolver) LoadSolutionFromProto__SWIG_1(arg2 Operations_research_MPSolutionResponse) (_swig_ret Absl_Status) {
	var swig_r Absl_Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Absl_Status)(SwigcptrAbsl_Status(C._wrap_Solver_LoadSolutionFromProto__SWIG_1_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrSolver) LoadSolutionFromProto(a ...interface{}) Absl_Status {
	argc := len(a)
	if argc == 1 {
		return p.LoadSolutionFromProto__SWIG_1(a[0].(Operations_research_MPSolutionResponse))
	}
	if argc == 2 {
		return p.LoadSolutionFromProto__SWIG_0(a[0].(Operations_research_MPSolutionResponse), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSolver) SetSolverSpecificParametersAsString(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Solver_SetSolverSpecificParametersAsString_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), *(*C.swig_type_10)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

type Operations_researchMPSolverBasisStatus int

func _swig_getSolver_FREE_Solver() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_FREE_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverFREE Operations_researchMPSolverBasisStatus = _swig_getSolver_FREE_Solver()

func _swig_getSolver_AT_LOWER_BOUND_Solver() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_AT_LOWER_BOUND_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverAT_LOWER_BOUND Operations_researchMPSolverBasisStatus = _swig_getSolver_AT_LOWER_BOUND_Solver()

func _swig_getSolver_AT_UPPER_BOUND_Solver() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_AT_UPPER_BOUND_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverAT_UPPER_BOUND Operations_researchMPSolverBasisStatus = _swig_getSolver_AT_UPPER_BOUND_Solver()

func _swig_getSolver_FIXED_VALUE_Solver() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_FIXED_VALUE_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverFIXED_VALUE Operations_researchMPSolverBasisStatus = _swig_getSolver_FIXED_VALUE_Solver()

func _swig_getSolver_BASIC_Solver() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_BASIC_Solver_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var SolverBASIC Operations_researchMPSolverBasisStatus = _swig_getSolver_BASIC_Solver()

func SolverInfinity() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_Solver_infinity_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

func (arg1 SwigcptrSolver) EnableOutput() {
	_swig_i_0 := arg1
	C._wrap_Solver_EnableOutput_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) SuppressOutput() {
	_swig_i_0 := arg1
	C._wrap_Solver_SuppressOutput_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSolver) Iterations() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Solver_iterations_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Nodes() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Solver_nodes_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) ComputeExactConditionNumber() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Solver_ComputeExactConditionNumber_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) NextSolution() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Solver_NextSolution_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) Set_time_limit(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Solver_set_time_limit_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.swig_type_13(_swig_i_1))
}

func (arg1 SwigcptrSolver) Wall_time() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_Solver_wall_time_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSolver) LoadModelFromProto(arg2 Operations_research_MPModelProto) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r_p := C._wrap_Solver_LoadModelFromProto_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrSolver) ExportModelAsLpFormat(arg2 bool) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Solver_ExportModelAsLpFormat_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrSolver) ExportModelAsMpsFormat(arg2 bool, arg3 bool) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_Solver_ExportModelAsMpsFormat_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C._Bool(_swig_i_2))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrSolver) SetHint(arg2 Std_vector_Sl_operations_research_MPVariable_Sm__Sg_, arg3 Std_vector_Sl_double_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Solver_SetHint_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrSolver) SetNumThreads(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Solver_SetNumThreads_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrSolver) SetTimeLimit(arg2 Int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Solver_SetTimeLimit_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSolver) WallTime() (_swig_ret Int64) {
	var swig_r Int64
	_swig_i_0 := arg1
	swig_r = (Int64)(SwigcptrInt64(C._wrap_Solver_WallTime_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type Solver interface {
	Swigcptr() uintptr
	SwigIsSolver()
	Clear()
	NumVariables() (_swig_ret int)
	Variables() (_swig_ret Std_vector_Sl_operations_research_MPVariable_Sm__Sg_)
	LookupVariable(arg2 string) (_swig_ret Variable)
	Var(arg2 float64, arg3 float64, arg4 bool, arg5 string) (_swig_ret Variable)
	NumVar(arg2 float64, arg3 float64, arg4 string) (_swig_ret Variable)
	IntVar(arg2 float64, arg3 float64, arg4 string) (_swig_ret Variable)
	BoolVar(arg2 string) (_swig_ret Variable)
	NumConstraints() (_swig_ret int)
	Constraints() (_swig_ret Std_vector_Sl_operations_research_MPConstraint_Sm__Sg_)
	LookupConstraint(arg2 string) (_swig_ret Constraint)
	Constraint(a ...interface{}) Constraint
	Objective() (_swig_ret Objective)
	Solve(a ...interface{}) Operations_researchMPSolverResultStatus
	ComputeConstraintActivities() (_swig_ret Std_vector_Sl_double_Sg_)
	VerifySolution(arg2 float64, arg3 bool) (_swig_ret bool)
	InterruptSolve() (_swig_ret bool)
	FillSolutionResponseProto(arg2 Operations_research_MPSolutionResponse)
	ExportModelToProto(arg2 Operations_research_MPModelProto)
	LoadSolutionFromProto(a ...interface{}) Absl_Status
	SetSolverSpecificParametersAsString(arg2 string) (_swig_ret bool)
	EnableOutput()
	SuppressOutput()
	Iterations() (_swig_ret int64)
	Nodes() (_swig_ret int64)
	ComputeExactConditionNumber() (_swig_ret float64)
	NextSolution() (_swig_ret bool)
	Set_time_limit(arg2 int64)
	Wall_time() (_swig_ret int64)
	LoadModelFromProto(arg2 Operations_research_MPModelProto) (_swig_ret string)
	ExportModelAsLpFormat(arg2 bool) (_swig_ret string)
	ExportModelAsMpsFormat(arg2 bool, arg3 bool) (_swig_ret string)
	SetHint(arg2 Std_vector_Sl_operations_research_MPVariable_Sm__Sg_, arg3 Std_vector_Sl_double_Sg_)
	SetNumThreads(arg2 int) (_swig_ret bool)
	SetTimeLimit(arg2 Int64)
	WallTime() (_swig_ret Int64)
}

type SwigcptrObjective uintptr

func (p SwigcptrObjective) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrObjective) SwigIsObjective() {
}

func (arg1 SwigcptrObjective) Clear() {
	_swig_i_0 := arg1
	C._wrap_Objective_Clear_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrObjective) SetCoefficient(arg2 Variable, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_Objective_SetCoefficient_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrObjective) GetCoefficient(arg2 Variable) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_Objective_GetCoefficient_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrObjective) SetOffset(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Objective_SetOffset_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrObjective) Offset() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Objective_offset_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrObjective) SetOptimizationDirection(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Objective_SetOptimizationDirection_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrObjective) SetMinimization() {
	_swig_i_0 := arg1
	C._wrap_Objective_SetMinimization_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrObjective) SetMaximization() {
	_swig_i_0 := arg1
	C._wrap_Objective_SetMaximization_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrObjective) Maximization() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Objective_maximization_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrObjective) Minimization() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Objective_minimization_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrObjective) Value() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Objective_Value_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrObjective) BestBound() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Objective_BestBound_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteObjective(arg1 Objective) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Objective_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

type Objective interface {
	Swigcptr() uintptr
	SwigIsObjective()
	Clear()
	SetCoefficient(arg2 Variable, arg3 float64)
	GetCoefficient(arg2 Variable) (_swig_ret float64)
	SetOffset(arg2 float64)
	Offset() (_swig_ret float64)
	SetOptimizationDirection(arg2 bool)
	SetMinimization()
	SetMaximization()
	Maximization() (_swig_ret bool)
	Minimization() (_swig_ret bool)
	Value() (_swig_ret float64)
	BestBound() (_swig_ret float64)
}

type SwigcptrVariable uintptr

func (p SwigcptrVariable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVariable) SwigIsVariable() {
}

func (arg1 SwigcptrVariable) Name() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Variable_name_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrVariable) SetInteger(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Variable_SetInteger_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrVariable) Integer() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Variable_integer_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVariable) Solution_value() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Variable_solution_value_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVariable) Index() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Variable_index_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVariable) Lb() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Variable_lb_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVariable) Ub() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Variable_ub_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVariable) SetBounds(arg2 float64, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Variable_SetBounds_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrVariable) Reduced_cost() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Variable_reduced_cost_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVariable) Basis_status() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	_swig_i_0 := arg1
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_Variable_basis_status_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVariable) X__str__() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Variable___str___ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrVariable) X__repr__() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Variable___repr___ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrVariable) SolutionValue() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Variable_SolutionValue_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVariable) SetLb(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Variable_SetLb_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVariable) SetUb(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Variable_SetUb_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVariable) ReducedCost() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Variable_ReducedCost_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteVariable(arg1 Variable) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Variable_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

type Variable interface {
	Swigcptr() uintptr
	SwigIsVariable()
	Name() (_swig_ret string)
	SetInteger(arg2 bool)
	Integer() (_swig_ret bool)
	Solution_value() (_swig_ret float64)
	Index() (_swig_ret int)
	Lb() (_swig_ret float64)
	Ub() (_swig_ret float64)
	SetBounds(arg2 float64, arg3 float64)
	Reduced_cost() (_swig_ret float64)
	Basis_status() (_swig_ret Operations_researchMPSolverBasisStatus)
	X__str__() (_swig_ret string)
	X__repr__() (_swig_ret string)
	SolutionValue() (_swig_ret float64)
	SetLb(arg2 float64)
	SetUb(arg2 float64)
	ReducedCost() (_swig_ret float64)
}

type SwigcptrConstraint uintptr

func (p SwigcptrConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrConstraint) SwigIsConstraint() {
}

func (arg1 SwigcptrConstraint) Name() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Constraint_name_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrConstraint) Clear() {
	_swig_i_0 := arg1
	C._wrap_Constraint_Clear_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrConstraint) SetCoefficient(arg2 Variable, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_Constraint_SetCoefficient_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrConstraint) GetCoefficient(arg2 Variable) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_Constraint_GetCoefficient_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrConstraint) Lb() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Constraint_lb_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrConstraint) Ub() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Constraint_ub_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrConstraint) SetBounds(arg2 float64, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Constraint_SetBounds_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrConstraint) Set_is_lazy(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Constraint_set_is_lazy_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrConstraint) Index() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Constraint_index_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrConstraint) Dual_value() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Constraint_dual_value_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrConstraint) Basis_status() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	_swig_i_0 := arg1
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_Constraint_basis_status_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrConstraint) SetLb(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Constraint_SetLb_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrConstraint) SetUb(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Constraint_SetUb_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrConstraint) DualValue() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Constraint_DualValue_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteConstraint(arg1 Constraint) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Constraint_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

type Constraint interface {
	Swigcptr() uintptr
	SwigIsConstraint()
	Name() (_swig_ret string)
	Clear()
	SetCoefficient(arg2 Variable, arg3 float64)
	GetCoefficient(arg2 Variable) (_swig_ret float64)
	Lb() (_swig_ret float64)
	Ub() (_swig_ret float64)
	SetBounds(arg2 float64, arg3 float64)
	Set_is_lazy(arg2 bool)
	Index() (_swig_ret int)
	Dual_value() (_swig_ret float64)
	Basis_status() (_swig_ret Operations_researchMPSolverBasisStatus)
	SetLb(arg2 float64)
	SetUb(arg2 float64)
	DualValue() (_swig_ret float64)
}

type SwigcptrMPSolverParameters uintptr

func (p SwigcptrMPSolverParameters) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMPSolverParameters) SwigIsMPSolverParameters() {
}

type Operations_researchMPSolverParametersDoubleParam int

func _swig_getMPSolverParameters_RELATIVE_MIP_GAP_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersDoubleParam) {
	var swig_r Operations_researchMPSolverParametersDoubleParam
	swig_r = (Operations_researchMPSolverParametersDoubleParam)(C._wrap_RELATIVE_MIP_GAP_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersRELATIVE_MIP_GAP Operations_researchMPSolverParametersDoubleParam = _swig_getMPSolverParameters_RELATIVE_MIP_GAP_MPSolverParameters()

func _swig_getMPSolverParameters_PRIMAL_TOLERANCE_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersDoubleParam) {
	var swig_r Operations_researchMPSolverParametersDoubleParam
	swig_r = (Operations_researchMPSolverParametersDoubleParam)(C._wrap_PRIMAL_TOLERANCE_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersPRIMAL_TOLERANCE Operations_researchMPSolverParametersDoubleParam = _swig_getMPSolverParameters_PRIMAL_TOLERANCE_MPSolverParameters()

func _swig_getMPSolverParameters_DUAL_TOLERANCE_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersDoubleParam) {
	var swig_r Operations_researchMPSolverParametersDoubleParam
	swig_r = (Operations_researchMPSolverParametersDoubleParam)(C._wrap_DUAL_TOLERANCE_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersDUAL_TOLERANCE Operations_researchMPSolverParametersDoubleParam = _swig_getMPSolverParameters_DUAL_TOLERANCE_MPSolverParameters()

type Operations_researchMPSolverParametersIntegerParam int

func _swig_getMPSolverParameters_PRESOLVE_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersIntegerParam) {
	var swig_r Operations_researchMPSolverParametersIntegerParam
	swig_r = (Operations_researchMPSolverParametersIntegerParam)(C._wrap_PRESOLVE_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersPRESOLVE Operations_researchMPSolverParametersIntegerParam = _swig_getMPSolverParameters_PRESOLVE_MPSolverParameters()

func _swig_getMPSolverParameters_LP_ALGORITHM_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersIntegerParam) {
	var swig_r Operations_researchMPSolverParametersIntegerParam
	swig_r = (Operations_researchMPSolverParametersIntegerParam)(C._wrap_LP_ALGORITHM_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersLP_ALGORITHM Operations_researchMPSolverParametersIntegerParam = _swig_getMPSolverParameters_LP_ALGORITHM_MPSolverParameters()

func _swig_getMPSolverParameters_INCREMENTALITY_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersIntegerParam) {
	var swig_r Operations_researchMPSolverParametersIntegerParam
	swig_r = (Operations_researchMPSolverParametersIntegerParam)(C._wrap_INCREMENTALITY_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersINCREMENTALITY Operations_researchMPSolverParametersIntegerParam = _swig_getMPSolverParameters_INCREMENTALITY_MPSolverParameters()

func _swig_getMPSolverParameters_SCALING_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersIntegerParam) {
	var swig_r Operations_researchMPSolverParametersIntegerParam
	swig_r = (Operations_researchMPSolverParametersIntegerParam)(C._wrap_SCALING_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersSCALING Operations_researchMPSolverParametersIntegerParam = _swig_getMPSolverParameters_SCALING_MPSolverParameters()

type Operations_researchMPSolverParametersPresolveValues int

func _swig_getMPSolverParameters_PRESOLVE_OFF_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersPresolveValues) {
	var swig_r Operations_researchMPSolverParametersPresolveValues
	swig_r = (Operations_researchMPSolverParametersPresolveValues)(C._wrap_PRESOLVE_OFF_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersPRESOLVE_OFF Operations_researchMPSolverParametersPresolveValues = _swig_getMPSolverParameters_PRESOLVE_OFF_MPSolverParameters()

func _swig_getMPSolverParameters_PRESOLVE_ON_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersPresolveValues) {
	var swig_r Operations_researchMPSolverParametersPresolveValues
	swig_r = (Operations_researchMPSolverParametersPresolveValues)(C._wrap_PRESOLVE_ON_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersPRESOLVE_ON Operations_researchMPSolverParametersPresolveValues = _swig_getMPSolverParameters_PRESOLVE_ON_MPSolverParameters()

type Operations_researchMPSolverParametersLpAlgorithmValues int

func _swig_getMPSolverParameters_DUAL_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersLpAlgorithmValues) {
	var swig_r Operations_researchMPSolverParametersLpAlgorithmValues
	swig_r = (Operations_researchMPSolverParametersLpAlgorithmValues)(C._wrap_DUAL_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersDUAL Operations_researchMPSolverParametersLpAlgorithmValues = _swig_getMPSolverParameters_DUAL_MPSolverParameters()

func _swig_getMPSolverParameters_PRIMAL_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersLpAlgorithmValues) {
	var swig_r Operations_researchMPSolverParametersLpAlgorithmValues
	swig_r = (Operations_researchMPSolverParametersLpAlgorithmValues)(C._wrap_PRIMAL_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersPRIMAL Operations_researchMPSolverParametersLpAlgorithmValues = _swig_getMPSolverParameters_PRIMAL_MPSolverParameters()

func _swig_getMPSolverParameters_BARRIER_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersLpAlgorithmValues) {
	var swig_r Operations_researchMPSolverParametersLpAlgorithmValues
	swig_r = (Operations_researchMPSolverParametersLpAlgorithmValues)(C._wrap_BARRIER_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersBARRIER Operations_researchMPSolverParametersLpAlgorithmValues = _swig_getMPSolverParameters_BARRIER_MPSolverParameters()

type Operations_researchMPSolverParametersIncrementalityValues int

func _swig_getMPSolverParameters_INCREMENTALITY_OFF_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersIncrementalityValues) {
	var swig_r Operations_researchMPSolverParametersIncrementalityValues
	swig_r = (Operations_researchMPSolverParametersIncrementalityValues)(C._wrap_INCREMENTALITY_OFF_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersINCREMENTALITY_OFF Operations_researchMPSolverParametersIncrementalityValues = _swig_getMPSolverParameters_INCREMENTALITY_OFF_MPSolverParameters()

func _swig_getMPSolverParameters_INCREMENTALITY_ON_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersIncrementalityValues) {
	var swig_r Operations_researchMPSolverParametersIncrementalityValues
	swig_r = (Operations_researchMPSolverParametersIncrementalityValues)(C._wrap_INCREMENTALITY_ON_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersINCREMENTALITY_ON Operations_researchMPSolverParametersIncrementalityValues = _swig_getMPSolverParameters_INCREMENTALITY_ON_MPSolverParameters()

type Operations_researchMPSolverParametersScalingValues int

func _swig_getMPSolverParameters_SCALING_OFF_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersScalingValues) {
	var swig_r Operations_researchMPSolverParametersScalingValues
	swig_r = (Operations_researchMPSolverParametersScalingValues)(C._wrap_SCALING_OFF_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersSCALING_OFF Operations_researchMPSolverParametersScalingValues = _swig_getMPSolverParameters_SCALING_OFF_MPSolverParameters()

func _swig_getMPSolverParameters_SCALING_ON_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersScalingValues) {
	var swig_r Operations_researchMPSolverParametersScalingValues
	swig_r = (Operations_researchMPSolverParametersScalingValues)(C._wrap_SCALING_ON_MPSolverParameters_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

var MPSolverParametersSCALING_ON Operations_researchMPSolverParametersScalingValues = _swig_getMPSolverParameters_SCALING_ON_MPSolverParameters()

func GetMPSolverParametersKDefaultRelativeMipGap() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_MPSolverParameters_kDefaultRelativeMipGap_get_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

func GetMPSolverParametersKDefaultPrimalTolerance() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_MPSolverParameters_kDefaultPrimalTolerance_get_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

func GetMPSolverParametersKDefaultDualTolerance() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_MPSolverParameters_kDefaultDualTolerance_get_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

func GetMPSolverParametersKDefaultPresolve() (_swig_ret Operations_researchMPSolverParametersPresolveValues) {
	var swig_r Operations_researchMPSolverParametersPresolveValues
	swig_r = (Operations_researchMPSolverParametersPresolveValues)(C._wrap_MPSolverParameters_kDefaultPresolve_get_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

func GetMPSolverParametersKDefaultIncrementality() (_swig_ret Operations_researchMPSolverParametersIncrementalityValues) {
	var swig_r Operations_researchMPSolverParametersIncrementalityValues
	swig_r = (Operations_researchMPSolverParametersIncrementalityValues)(C._wrap_MPSolverParameters_kDefaultIncrementality_get_ortoolsswig_fe88f1954daf0526())
	return swig_r
}

func NewMPSolverParameters() (_swig_ret MPSolverParameters) {
	var swig_r MPSolverParameters
	swig_r = (MPSolverParameters)(SwigcptrMPSolverParameters(C._wrap_new_MPSolverParameters_ortoolsswig_fe88f1954daf0526()))
	return swig_r
}

func (arg1 SwigcptrMPSolverParameters) SetDoubleParam(arg2 Operations_researchMPSolverParametersDoubleParam, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_MPSolverParameters_SetDoubleParam_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrMPSolverParameters) SetIntegerParam(arg2 Operations_researchMPSolverParametersIntegerParam, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_MPSolverParameters_SetIntegerParam_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrMPSolverParameters) GetDoubleParam(arg2 Operations_researchMPSolverParametersDoubleParam) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float64)(C._wrap_MPSolverParameters_GetDoubleParam_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrMPSolverParameters) GetIntegerParam(arg2 Operations_researchMPSolverParametersIntegerParam) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_MPSolverParameters_GetIntegerParam_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func DeleteMPSolverParameters(arg1 MPSolverParameters) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_MPSolverParameters_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

type MPSolverParameters interface {
	Swigcptr() uintptr
	SwigIsMPSolverParameters()
	SetDoubleParam(arg2 Operations_researchMPSolverParametersDoubleParam, arg3 float64)
	SetIntegerParam(arg2 Operations_researchMPSolverParametersIntegerParam, arg3 int)
	GetDoubleParam(arg2 Operations_researchMPSolverParametersDoubleParam) (_swig_ret float64)
	GetIntegerParam(arg2 Operations_researchMPSolverParametersIntegerParam) (_swig_ret int)
}

type SwigcptrModelExportOptions uintptr

func (p SwigcptrModelExportOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrModelExportOptions) SwigIsModelExportOptions() {
}

func NewModelExportOptions() (_swig_ret ModelExportOptions) {
	var swig_r ModelExportOptions
	swig_r = (ModelExportOptions)(SwigcptrModelExportOptions(C._wrap_new_ModelExportOptions_ortoolsswig_fe88f1954daf0526()))
	return swig_r
}

func DeleteModelExportOptions(arg1 ModelExportOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ModelExportOptions_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
}

type ModelExportOptions interface {
	Swigcptr() uintptr
	SwigIsModelExportOptions()
}

func ExportModelAsLpFormat__SWIG_0(arg1 Operations_research_MPModelProto, arg2 ModelExportOptions) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r_p := C._wrap_ExportModelAsLpFormat__SWIG_0_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func ExportModelAsLpFormat__SWIG_1(arg1 Operations_research_MPModelProto) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	swig_r_p := C._wrap_ExportModelAsLpFormat__SWIG_1_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func ExportModelAsLpFormat(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return ExportModelAsLpFormat__SWIG_1(a[0].(Operations_research_MPModelProto))
	}
	if argc == 2 {
		return ExportModelAsLpFormat__SWIG_0(a[0].(Operations_research_MPModelProto), a[1].(ModelExportOptions))
	}
	panic("No match for overloaded function call")
}

func ExportModelAsMpsFormat__SWIG_0(arg1 Operations_research_MPModelProto, arg2 ModelExportOptions) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r_p := C._wrap_ExportModelAsMpsFormat__SWIG_0_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func ExportModelAsMpsFormat__SWIG_1(arg1 Operations_research_MPModelProto) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	swig_r_p := C._wrap_ExportModelAsMpsFormat__SWIG_1_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func ExportModelAsMpsFormat(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return ExportModelAsMpsFormat__SWIG_1(a[0].(Operations_research_MPModelProto))
	}
	if argc == 2 {
		return ExportModelAsMpsFormat__SWIG_0(a[0].(Operations_research_MPModelProto), a[1].(ModelExportOptions))
	}
	panic("No match for overloaded function call")
}

func FindErrorInModelProto(arg1 Operations_research_MPModelProto) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	swig_r_p := C._wrap_FindErrorInModelProto_ortoolsswig_fe88f1954daf0526(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

type SwigcptrStd_vector_Sl_operations_research_MPConstraint_Sm__Sg_ uintptr
type Std_vector_Sl_operations_research_MPConstraint_Sm__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_vector_Sl_operations_research_MPConstraint_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOperations_research_MPModelProto uintptr
type Operations_research_MPModelProto interface {
	Swigcptr() uintptr
}

func (p SwigcptrOperations_research_MPModelProto) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrInt64 uintptr
type Int64 interface {
	Swigcptr() uintptr
}

func (p SwigcptrInt64) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrAbsl_Status uintptr
type Absl_Status interface {
	Swigcptr() uintptr
}

func (p SwigcptrAbsl_Status) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_operations_research_MPVariable_Sm__Sg_ uintptr
type Std_vector_Sl_operations_research_MPVariable_Sm__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_vector_Sl_operations_research_MPVariable_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_double_Sg_ uintptr
type Std_vector_Sl_double_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_vector_Sl_double_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_atomic_Sl_bool_Sg_ uintptr
type Std_atomic_Sl_bool_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_atomic_Sl_bool_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOperations_research_MPSolutionResponse uintptr
type Operations_research_MPSolutionResponse interface {
	Swigcptr() uintptr
}

func (p SwigcptrOperations_research_MPSolutionResponse) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOperations_research_MPModelRequest uintptr
type Operations_research_MPModelRequest interface {
	Swigcptr() uintptr
}

func (p SwigcptrOperations_research_MPModelRequest) Swigcptr() uintptr {
	return uintptr(p)
}
